---

- name: Fetch the certificate bundle and store it as a variable for use
  uri:
    url: "{{ papertrail_rsyslog_tls_cert_bundle_url }}"
    return_content: yes
  delegate_to: 127.0.0.1
  run_once: true
  register: papertrail_rsyslog_tls_cert_bundle_result
  when: papertrail_rsyslog_tls_cert_bundle is not defined

- name: Set as a variable to use for this server
  set_fact:
    papertrail_rsyslog_tls_cert_bundle: "{{ papertrail_rsyslog_tls_cert_bundle_result.content }}"
  when: papertrail_rsyslog_tls_cert_bundle is not defined

- name: Compare the bundle variable now to the checksum to save copying to the server
  fail:
    msg: "The certificate bundle does not match the expected checksum {{ papertrail_rsyslog_tls_cert_bundle_checksum }}"
  when: |
    papertrail_rsyslog_tls_cert_bundle_checksum is defined
    and {{ papertrail_rsyslog_tls_cert_bundle | hash('md5') }} != papertrail_rsyslog_tls_cert_bundle_checksum"

- name: Copy the bundle into position
  template:
    src:    "{{ papertrailapp_rsyslog_tls_cert_bundle_template }}"
    dest:   "{{ papertrail_rsyslog_tls_cert_bundle_path }}"
    mode:   "{{ papertrail_rsyslog_tls_cert_bundle_mode }}"
    owner:  "{{ papertrail_rsyslog_tls_cert_bundle_owner }}"
    group:  "{{ papertrail_rsyslog_tls_cert_bundle_group  }}"
  when: papertrail_rsyslog_tls_cert_bundle is defined

- name: Stat the certificate
  stat:
    get_checksum: yes
    get_md5: yes
    path: "{{ papertrail_rsyslog_tls_cert_bundle_path }}"
  register: papertrail_rsyslog_tls_cert_bundle_stat
  when: papertrail_rsyslog_tls_cert_bundle_checksum is defined

- name: Check the checksum against the stat
  fail:
    msg: "Checksum for certificate {{ papertrail_rsyslog_tls_cert_bundle_path }} do not match"
  when: |
    papertrail_rsyslog_tls_cert_bundle_checksum is defined
    and papertrail_rsyslog_tls_cert_bundle_stat.stat.md5 != papertrail_rsyslog_tls_cert_bundle_checksum

...
